# -*- coding: utf-8 -*-
"""Soal1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ESd63YoCE5jkKpUNcfhZSquSdbxVKkbJ
"""

!pip install experta

!pip install --upgrade frozendict

from experta import *

class DiagnosisHama(KnowledgeEngine):
    @Rule(Fact(daun_menguning=True) & Fact(bercak_hitam=True))
    def jamur_daun(self):
        print("Diagnosis: Tanaman terkena Jamur Daun.")

    @Rule(Fact(daun_berlubang=True))
    def ulat_pemakan_daun(self):
        print("Diagnosis: Tanaman terkena Ulat Pemakan Daun.")

    @Rule(Fact(tanaman_layu=True))
    def bakteri_layu(self):
        print("Diagnosis: Tanaman terkena Bakteri Layu Tanaman.")

    @Rule(Fact(daun_menggulung=True) & Fact(daun_rontok=True))
    def tungau_merah_1(self):
        print("Diagnosis: Tanaman terkena Tungau Merah.")

    @Rule(Fact(muncul_sarang_laba_laba=True))
    def tungau_merah_2(self):
        print("Diagnosis: Tanaman terkena Tungau Merah.")

    @Rule(Fact(akar_membusuk=True))
    def nematoda_akar(self):
        print("Diagnosis: Tanaman terkena Nematoda Akar.")

    @Rule(Fact(tunas_mati=True) & Fact(daun_menguning=True))
    def virus_mosaik_1(self):
        print("Diagnosis: Tanaman terkena Virus Mosaik.")

    @Rule(Fact(daun_rontok=True) & Fact(tanaman_layu=True))
    def virus_mosaik_2(self):
        print("Diagnosis: Tanaman terkena Virus Mosaik.")

    @Rule(Fact(batang_membusuk=True))
    def hama_penggerek_batang(self):
        print("Diagnosis: Tanaman terkena Hama Penggerek Batang.")

    @Rule(Fact(daun_menguning=True))
    def kutu_daun(self):
        print("Diagnosis: Tanaman terkena Kutu Daun.")

    @Rule(
        Fact(daun_menguning=False),
        Fact(bercak_hitam=False),
        Fact(daun_berlubang=False),
        Fact(tanaman_layu=False),
        Fact(daun_menggulung=False),
        Fact(muncul_sarang_laba_laba=False),
        Fact(akar_membusuk=False),
        Fact(tunas_mati=False),
        Fact(daun_rontok=False),
        Fact(batang_membusuk=False)
    )
    def sehat(self):
        print("Diagnosis: Tanaman tampaknya sehat.")

def get_input():
    def ask(question):
        return input(question + " (yes/no): ").strip().lower() == "yes"

    return {
        "daun_menguning": ask("Apakah daun menguning?"),
        "bercak_hitam": ask("Apakah terdapat bercak hitam?"),
        "daun_berlubang": ask("Apakah daun berlubang?"),
        "tanaman_layu": ask("Apakah tanaman layu?"),
        "daun_menggulung": ask("Apakah daun menggulung?"),
        "muncul_sarang_laba_laba": ask("Apakah muncul sarang laba-laba?"),
        "akar_membusuk": ask("Apakah akar membusuk?"),
        "tunas_mati": ask("Apakah tunas mati?"),
        "daun_rontok": ask("Apakah daun rontok?"),
        "batang_membusuk": ask("Apakah batang membusuk?")
    }

if __name__ == "__main__":
    symptoms = get_input()
    engine = DiagnosisHama()
    engine.reset()

    for symptom, present in symptoms.items():
        engine.declare(Fact(**{symptom: present}))

    engine.run()